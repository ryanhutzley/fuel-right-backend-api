{"version":3,"sources":["Components/NavBar.js","Components/Login.js","Components/TrackerForm.js","Components/DailyLog.js","Components/History.js","Components/EditProfileForm.js","Components/App.js","reportWebVitals.js","index.js"],"names":["NavBar","user","logout","setDisplayForm","setErrors","handleClick","Navbar","bg","variant","sticky","Container","id","Brand","Nav","className","Link","as","to","onClick","NavDropdown","title","Item","Divider","style","color","marginBottom","marginTop","name","Login","onLogin","useState","formDisplayed","setFormDisplayed","email","password","existingUser","setExistingUser","errors","password_confirmation","weight","formData","setFormData","history","useHistory","e","a","preventDefault","target","blur","fetch","method","headers","body","JSON","stringify","res","json","data","ok","push","console","log","display","alignItems","flexDirection","textAlign","width","margin","textDecorationLine","fontStyle","borderRadius","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","value","onChange","Button","marginLeft","map","error","index","minHeight","TrackerForm","addEntry","displayForm","action","setAction","date","setDate","time","setTime","duration","perceived_effort","activity","setActivity","portion","foods","setFoods","wakeup","food","bedtime","selected","setSelected","payload","toLowerCase","el","Text","list","foodsCopy","slice","handleFoodName","handleFoodPortion","length","DailyLog","schedules","setIndex","handleSchedulesScroll","displayedSchedule","handleScheduleDelete","show","setShow","regex","activitiesTotal","sleepDuration","filter","foodAction","foodNames","forEach","hours","added_mins","handleClose","backgroundColor","padding","justifyContent","newIndex","fontSize","Table","striped","bordered","hover","match","colSpan","names","portions","groupedNames","join","groupedPortions","Modal","onHide","backdrop","keyboard","centered","Header","Title","Body","Footer","History","favFood","avgSleepDuration","bestPerformanceFood","optimalSleepDuration","chartOneData","chartTwoData","schedule","activities","charAt","toUpperCase","mins","ResponsiveContainer","height","BarChart","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Bar","fill","EditProfileForm","handleUserUpdate","handleUserDelete","profileData","setProfileData","marginRight","App","setUser","setSchedules","setDisplayedSchedule","setFavFood","setAverageSleepDuration","setBestPerformanceFood","setOptimalSleepDuration","setChartOneData","setChartTwoData","getSchedules","then","getSleepDurations","getBestPerformanceFood","getOptimalSleepDuration","getChartOneData","getChartTwoData","logOut","updatedUser","useEffect","response","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.033388e7.chunk.js","sourcesContent":["import { Navbar, Container, NavDropdown, Nav } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nfunction NavBar({ user, logout, setDisplayForm, setErrors }) {\n\n    function handleClick() {\n        setDisplayForm(true)\n        setErrors([])\n    }\n\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\n            <Container id=\"container\">\n            <Navbar.Brand id=\"brand\">FuelRight</Navbar.Brand>\n                <Nav className=\"me-auto\">\n                    {user ? null : <Nav.Link className=\"link\" as={Link} to=\"/login\">Login</Nav.Link>}\n                    <Nav.Link className=\"link\" onClick={handleClick} as={Link} to=\"/\">Tracker</Nav.Link>\n                    <Nav.Link className=\"link\" onClick={handleClick} as={Link} to=\"/day\">Your Day</Nav.Link>\n                    <Nav.Link className=\"link\" onClick={handleClick} as={Link} to=\"/history\">Your History</Nav.Link>\n                    <NavDropdown title=\"Your Profile\" id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item className=\"link\" onClick={handleClick} as={Link} to=\"/edit\">Edit Profile</NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item onClick={logout} className=\"link\">Logout</NavDropdown.Item>\n                    </NavDropdown>\n                </Nav>\n                {user ? (<p style={{color: 'white', marginBottom: '5px', marginTop: '5px'}}><span style={{color: 'white'}}>Signed in as:</span> {user.name}</p>) : null}\n            </Container>\n        </Navbar>\n    )\n}\n\nexport default NavBar","import { Form, Button } from 'react-bootstrap'\nimport { useHistory } from 'react-router'\nimport { useState } from 'react'\n\nfunction Login({ onLogin, setDisplayForm }) {\n    const [formDisplayed, setFormDisplayed] = useState(true)\n    const [existingUser, setExistingUser] = useState({\n        email: \"\",\n        password: \"\"\n    })\n    const [errors, setErrors] = useState([])\n    const [formData, setFormData] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        password_confirmation: \"\",\n        weight: \"\"\n    })\n\n    const history = useHistory()\n\n    // console.log(history)\n    console.log(onLogin)\n\n    function handleClick() {\n        setFormDisplayed(!formDisplayed)\n        setFormData({\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            password_confirmation: \"\",\n            weight: \"\"\n        })\n        setExistingUser({ email: \"\", password: \"\" })\n        setErrors([])\n    }\n\n    async function handleSignup(e) {\n        e.preventDefault()\n        e.target.blur()\n        const res = await fetch(\"/signup\", {\n            method: \"POST\",\n            headers: {\"Content-type\": \"application/json\"},\n            body: JSON.stringify(formData)\n        })\n        const data = await res.json()\n        if (res.ok) {\n            onLogin(data) // <== error: this is not a function??, handleUser is an attempt to avoid passing down state setter\n            setDisplayForm(true)\n            history.push(\"/\") // <== pushing to day instead of tracker page and I don't know why\n        } else {\n            setErrors(data.errors)\n            setFormData({\n                name: \"\",\n                email: \"\",\n                password: \"\",\n                password_confirmation: \"\",\n                weight: \"\"\n            })\n        }\n    }\n\n    async function handleLogin(e) {\n        e.preventDefault()\n        e.target.blur()\n        const res = await fetch(\"/login\", {\n          method: \"POST\",\n          headers: {\"Content-Type\": \"application/json\"},\n          body: JSON.stringify(existingUser)\n        })\n        const data = await res.json()\n        if (res.ok) {\n            onLogin(data)\n            setDisplayForm(true)\n            history.push(\"/\")\n        } else {\n            setErrors(data.errors)\n            setExistingUser({ email: \"\", password: \"\" })\n        }\n    }\n\n    // console.log(formData)\n    // console.log(existingUser)\n\n    return (\n        <div>\n            {formDisplayed ? (\n                <>\n                <div style={{display: 'flex', alignItems:'center', flexDirection: 'column', textAlign: 'center', width: '80%', margin: 'auto', color: 'white'}}>\n                    <div id=\"pop\">\n                        <h1 style={{marginTop: '50px', textAlign: 'center'}}>Welcome to <span id=\"brand\" style={{textDecorationLine: 'underline'}}>FuelRight</span></h1>\n                        <br></br>\n                        <br></br>\n                        <h3 style={{fontStyle: 'italic'}}>A digital lifestyle log so you can optimize your performance in the arena of your choosing</h3>\n                        <br></br>\n                        <h3 style={{fontStyle: 'italic'}}>Unlocking a better you is hard...</h3>\n                        <br></br>\n                        <br></br>\n                        <h3><span id=\"brand\" style={{textDecorationLine: 'underline', fontStyle: 'bolder'}}>FuelRight</span> makes it simple</h3>\n                    </div>\n                </div>\n                <section className=\"gradient-custom\">\n                    <div className=\"container py-5 h-100\">\n                        <div className=\"row justify-content-center align-items-center h-100\">\n                            <div className=\"col-12 col-lg-9 col-xl-7\">\n                                <div className=\"card shadow-2-strong card-registration\" style={{borderRadius: \"15px\"}}>\n                                    <div className=\"card-body p-4 p-md-5\">\n                                        <h3 className=\"mb-4 pb-2 pb-md-0 mb-md-3\">FuelRight Signup</h3>\n                                        <Form onSubmit={handleSignup}>\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n                                                <Form.Label>Name</Form.Label>\n                                                <Form.Control required type=\"name\" placeholder=\"Enter name\" value={formData.name} onChange={e => setFormData({...formData, name: e.target.value})}/>\n                                            </Form.Group>\n                                            \n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                                <Form.Label>Email</Form.Label>\n                                                <Form.Control required type=\"email\" placeholder=\"Enter email\" value={formData.email} onChange={e => setFormData({...formData, email: e.target.value})} />\n                                            </Form.Group>\n\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                                                <Form.Label>Password</Form.Label>\n                                                <Form.Control required type=\"password\" placeholder=\"Enter Password\" value={formData.password} onChange={e => setFormData({...formData, password: e.target.value})} />\n                                            </Form.Group>\n                                            \n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicPasswordConfirmation\">\n                                                <Form.Label>Password Confirmation</Form.Label>\n                                                <Form.Control required type=\"password\" placeholder=\"Password Confirmation\" value={formData.password_confirmation} onChange={e => setFormData({...formData, password_confirmation: e.target.value})}/>\n                                            </Form.Group>\n                                            \n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicWeight\">\n                                                <Form.Label>Weight</Form.Label>\n                                                <Form.Control required type=\"text\" placeholder=\"Weight in lbs.\" value={formData.weight} onChange={e => setFormData({...formData, weight: e.target.value})}/>\n                                            </Form.Group>\n                                            <div style={{display: 'inline-flex', flexDirection: 'row'}}>\n                                                <Button variant=\"primary\" type=\"submit\">\n                                                    Create Account\n                                                </Button>\n                                                <p style={{marginLeft: '15px', marginBottom: '0px', marginTop: '5px'}}>Already have an account? Login <a className=\"link\" onClick={handleClick}>here</a> </p>\n                                            </div>\n                                            <br></br>\n                                            <br></br>\n                                            {errors !== [] ? \n                                            (<div>\n                                                {errors.map((error, index)=> (<p style={{color: 'red', marginBottom: '0px', marginTop: '10px'}} key={index}>{error}</p>))}\n                                            </div>)\n                                            : null}\n                                        </Form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <br></br>\n                    <br></br>\n                </section>\n                </>\n            ) : (\n                <>\n                    {/* <div style={{display: 'flex', alignItems:'center', flexDirection: 'column', textAlign: 'center', width: '80%', margin: 'auto', color: 'white'}}>\n                        <h1 style={{marginTop: '50px', textAlign: 'center'}}>Welcome to <span id=\"brand\" style={{textDecorationLine: 'underline'}}>FuelRight</span></h1>\n                        <br></br>\n                        <br></br>\n                        <div>\n                            <h3 style={{fontStyle: 'italic'}}>A digital lifestyle log so you can optimize your performance in the arena of your choosing</h3>\n                            <br></br>\n                            <h3 style={{fontStyle: 'italic'}}>Unlocking a better you is hard...</h3>\n                            <br></br>\n                            <br></br>\n                            <h3><span id=\"brand\" style={{textDecorationLine: 'underline', fontStyle: 'bolder'}}>FuelRight</span> makes it simple</h3>\n                        </div>\n                    </div> */}\n                    <section className=\"gradient-custom\" style={{minHeight: '100vh'}}>\n                        <div className=\"container py-6\">\n                            <div className=\"row justify-content-center align-items-center h-100\">\n                                <div className=\"col-12 col-lg-9 col-xl-7\">\n                                    <div className=\"card shadow-2-strong card-registration\" style={{borderRadius: \"15px\"}}>\n                                        <div className=\"card-body p-4 p-md-5\">\n                                            <h3 className=\"mb-4 pb-2 pb-md-0 mb-md-5\">FuelRight Signup</h3>\n                                            <Form onSubmit={handleLogin}>\n                                                \n                                                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                                    <Form.Label>Email</Form.Label>\n                                                    <Form.Control required type=\"email\" placeholder=\"Enter email\" value={existingUser.email} onChange={e => setExistingUser({...existingUser, email: e.target.value})}/>\n                                                </Form.Group>\n\n                                                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                                                    <Form.Label>Password</Form.Label>\n                                                    <Form.Control required type=\"password\" placeholder=\"Enter Password\" value={existingUser.password} onChange={e => setExistingUser({...existingUser, password: e.target.value})}/>\n                                                </Form.Group>\n                                          \n                                                <div style={{display: 'inline-flex', flexDirection: 'row'}}>\n                                                    <Button variant=\"primary\" type=\"submit\">\n                                                        Login\n                                                    </Button>\n                                                    <p style={{marginLeft: '15px', marginBottom: '0px', marginTop: '5px'}}>Back to <a className=\"link\" onClick={handleClick}>Signup</a> </p>\n                                                </div>\n                                                <br></br>\n                                                {errors !== [] ? \n                                                (<div>\n                                                    {errors.map((error, index)=> (<p style={{color: 'red', marginBottom: '0px', marginTop: '10px'}} key={index}>{error}</p>))}\n                                                </div>)\n                                                : null}\n                                            </Form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                </>\n            )\n            }\n        </div>\n    )\n}\n\nexport default Login","import { Form, Button } from 'react-bootstrap'\nimport { useState } from 'react'\n\nfunction TrackerForm({ addEntry, displayForm, setDisplayForm, errors }) {\n    const [action, setAction] = useState(\"\")\n    const [date, setDate] = useState(\"\")\n    const [time, setTime] = useState(\"\")\n    const [activity, setActivity] = useState({\n        name: \"\",\n        duration: \"\",\n        perceived_effort: \"\"\n    })\n    const [foods, setFoods] = useState([{ name: \"\", portion: \"\" }])\n    const [selected, setSelected] = useState({ wakeup: false, food: false, activity: false, bedtime: false })\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        e.target[3].blur()\n        if (selected.wakeup) {   \n            let payload = { date, time }\n            addEntry(action.toLowerCase(), payload)\n            setSelected({...selected, wakeup: false})\n            setTime(\"\")\n            setDate(\"\")\n            setAction(\"\")\n            // setDisplayForm(false)\n        }\n        else if (selected.food) {\n            let payload = foods.map(el => {\n                return {...el, date, time}\n            })\n            addEntry(action.toLowerCase(), payload)\n            setSelected({...selected, food: false})\n            setTime(\"\")\n            setDate(\"\")\n            setFoods([{ name: \"\", portion: \"\" }])\n            setAction(\"\")\n            // setDisplayForm(false)\n        }\n        else if (selected.activity) {\n            let payload = {...activity, date: date, time: time}\n            addEntry(action.toLowerCase(), payload)\n            setSelected({...selected, activity: false})\n            setTime(\"\")\n            setDate(\"\")\n            setActivity({ name: \"\", duration: \"\", perceived_effort: \"\" })\n            setAction(\"\")\n            // setDisplayForm(false)\n        } else if (selected.bedtime) {\n            let payload = { date, time }\n            addEntry(action.toLowerCase(), payload)\n            setSelected({...selected, bedtime: false})\n            setTime(\"\")\n            setDate(\"\")\n            setAction(\"\")\n            // setDisplayForm(false)\n        }\n    }\n\n    function handleFoodName(e, index) {\n        let foodsCopy = foods.slice(0)\n        foodsCopy[index].name = e.target.value\n        setFoods(foodsCopy)\n    }\n\n    function handleFoodPortion(e, index) {\n        let foodsCopy = foods.slice(0)\n        foodsCopy[index].portion = e.target.value\n        setFoods(foodsCopy)\n    }\n\n    function handleActionChange(e) {\n        setAction(e.target.value)\n        if (e.target.value === \"Food\") {\n            setSelected({ wakeup: false, food: true, activity: false, bedtime: false })\n            setActivity({ name: \"\", duration: \"\", perceived_effort: \"\" })\n        } else if (e.target.value === \"Activity\") {\n            setSelected({ wakeup: false, food: false, activity: true, bedtime: false })\n            setFoods([{ name: \"\", portion: \"\" }])\n        } else if (e.target.value === \"Wakeup\") {\n            setSelected({ wakeup: true, food: false, activity: false, bedtime: false })\n            setActivity({ name: \"\", duration: \"\", perceived_effort: \"\" })\n            setFoods([{ name: \"\", portion: \"\" }])\n            return null\n        } else if (e.target.value === \"Bedtime\") {\n            setSelected({ wakeup: false, food: false, activity: false, bedtime: true })\n            setActivity({ name: \"\", duration: \"\", perceived_effort: \"\" })\n            setFoods([{ name: \"\", portion: \"\" }])\n            return null\n        }\n    }\n\n    function handleAddFood(e) {\n        e.target.blur()\n        setFoods([...foods, { name: \"\", portion: \"\" }])\n    }\n\n    function handleRemoveFood(e) {\n        e.target.blur()\n        if (foods.length === 1) {\n            return null\n        } else {\n            setFoods(foods.slice(0, -1)) \n        }\n    }\n\n    console.log(errors)\n    console.log(foods)\n\n    return (\n        <>\n            {displayForm ? (\n            <section className=\"gradient-custom\" style={{minHeight: '100vh'}}>\n                <div className=\"container py-6\">\n                    <div className=\"row justify-content-center align-items-center h-100\">\n                        <div className=\"col-12 col-lg-9 col-xl-7\">\n                            <div className=\"card shadow-2-strong card-registration\" style={{borderRadius: \"15px\"}}>\n                                <div className=\"card-body p-4 p-md-5\">\n                                    <h3 className=\"mb-4 pb-2 pb-md-0 mb-md-3\">FuelRight Monitoring</h3>\n                                    <Form onSubmit={handleSubmit}>\n                                        <Form.Text>Please provide information regarding your food consumption and activity results so that we can help get you on the path to success!</Form.Text>\n                                        <br></br>\n                                        <br></br>\n                                        <Form.Group className=\"mb-3\" controlId=\"formBasicDate\">\n                                            <Form.Label>Date</Form.Label>\n                                            <Form.Control required type=\"date\" value={date} onChange={e => setDate(e.target.value)}/>\n                                        </Form.Group>\n                                        \n                                        <Form.Group className=\"mb-3\" controlId=\"formBasicTime\">\n                                            <Form.Label>Time</Form.Label>\n                                            <Form.Control required type=\"time\" value={time} onChange={e => setTime(e.target.value)}/>\n                                        </Form.Group>\n\n                                        <Form.Group className=\"mb-3\" controlId=\"formBasicAction\">\n                                            <Form.Label>Action</Form.Label>\n                                            <Form.Control required list=\"action-list\" type=\"text\" value={action} onChange={handleActionChange}/>\n                                            <datalist id=\"action-list\">\n                                                <option value=\"Wakeup\"/>\n                                                <option value=\"Food\" />\n                                                <option value=\"Activity\"/>\n                                                <option value=\"Bedtime\"/>\n                                            </datalist>\n                                        </Form.Group>\n                                        {selected.food ? (\n                                            foods.map((food, index) => {\n                                                return (\n                                                    <Form.Group className=\"mb-3\" controlId=\"formBasicFood\" key={index}>\n                                                        <Form.Label>Type of Food</Form.Label>\n                                                        <Form.Control required type=\"text\" value={food.name} onChange={e => handleFoodName(e, index)}/>\n                                                        <Form.Label>Quantity (oz.)</Form.Label>\n                                                        <Form.Control required type=\"text\" value={food.portion} onChange={e => handleFoodPortion(e, index)}/>\n                                                    </Form.Group>\n                                                )\n                                            }))\n                                            : null}\n                                        {selected.food ? (\n                                            <div>\n                                                <Button variant=\"secondary\" type=\"button\" onClick={handleAddFood}>Add Foods</Button>{\" \"}\n                                                <Button variant=\"danger\" type=\"button\" onClick={handleRemoveFood}>Remove Foods</Button>\n                                                <br></br>\n                                                <br></br>\n                                            </div>\n                                        ) : null}\n                                        {selected.activity ? (\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicFood\">\n                                                <Form.Label>Type of activity</Form.Label>\n                                                <Form.Control required type=\"text\" value={activity.name} onChange={e => setActivity({...activity, name: e.target.value})}/>\n                                                <Form.Label>Duration (mins.)</Form.Label>\n                                                <Form.Control required type=\"text\" value={activity.duration} onChange={e => setActivity({...activity, duration: e.target.value})}/>\n                                                <br></br>\n                                                <Form.Label>Rate Perceived Effort</Form.Label> \n                                                <br></br>\n                                                <Form.Text>(How did this workout feel compared to past efforts of similar intensity/duration? scale: 1-10, 1 = way worse, 5 = the same, 10 = way better)</Form.Text>\n                                                <br></br>\n                                                <br></br>\n                                                <Form.Control required type=\"text\" value={activity.perceived_effort} onChange={e => setActivity({...activity, perceived_effort: e.target.value})}/>\n                                            </Form.Group>\n                                        ) : null}\n                                        <Button variant=\"primary\" type=\"submit\">\n                                            Submit Entry\n                                        </Button>\n                                        <br></br>\n                                        {errors !== [] ? \n                                        (<div>\n                                            {errors.map((error, index)=> (<p style={{color: 'red', marginBottom: '0px', marginTop: '10px'}} key={index}>{error}</p>))}\n                                        </div>)\n                                        : null}\n                                    </Form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section> ) : (\n                <section className=\"gradient-custom\" style={{minHeight: '100vh'}}>\n                    <div className=\"container py-6\">\n                        <div className=\"row justify-content-center align-items-center h-100\">\n                            <div className=\"col-12 col-lg-9 col-xl-7\">\n                                <div className=\"card shadow-2-strong card-registration\" style={{borderRadius: \"15px\"}}>\n                                    <div className=\"card-body p-4 p-md-5\">\n                                            <h3 className=\"mb-4 pb-2 pb-md-0 mb-md-3\">Your entry has been recorded!</h3>\n                                            <a className=\"link\" onClick={() => setDisplayForm(true)}>Make another submission</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            )}\n        </>\n    )\n}\n\nexport default TrackerForm","import { Table, Button, Modal } from 'react-bootstrap'\nimport { useEffect, useState } from 'react'\n\nfunction DailyLog({ schedules, index, setIndex, handleSchedulesScroll, displayedSchedule, handleScheduleDelete }) {\n    const [show, setShow] = useState(false)\n    \n    const regex = /\\d+:\\d+/g\n\n    function handlePrevious(e) {\n        e.target.blur()\n        if (index !== 0) {\n            let newIndex = index - 1\n            handleSchedulesScroll(schedules[newIndex].id)\n            setIndex(newIndex)\n        }\n    }\n\n    function handleNext(e) {\n        e.target.blur()\n        if (index !== schedules.length - 1) {\n            let newIndex = index + 1\n            handleSchedulesScroll(schedules[newIndex].id)\n            setIndex(newIndex)\n        }\n    }\n\n    let activitiesTotal = 0\n    let sleepDuration = \"Insufficient data\"\n    let foods = 0\n\n    if (displayedSchedule) {\n        let activities = displayedSchedule[1].filter(action => action.duration)\n        activitiesTotal = activities.length\n        let foodAction = displayedSchedule[1].filter(action => action.foods)\n        let foodNames = []\n        foodAction.map(action => {\n            action.foods.forEach(food => foodNames.push(food.name))\n        })\n        if (foodNames.length > 0) {\n            foods = foodNames.length\n        }\n        if (displayedSchedule[2].hours) {\n            sleepDuration = `${displayedSchedule[2].hours}h ${displayedSchedule[2].added_mins}m`\n        }\n    }\n\n    function handleShow(e) {\n        e.target.blur()\n        setShow(true)\n    }\n\n    function handleClose() {\n        setShow(false)\n    }\n\n    function handleDelete() {\n        handleScheduleDelete(displayedSchedule[0].id)\n        setShow(false)\n    }\n\n    console.log(displayedSchedule)\n    console.log(foods)\n    \n    return (\n        <div style={{minHeight: '100vh'}}>\n            <br></br>\n            <br></br>\n            <h1 id=\"pop\" style={{color: 'white', display: 'table', margin: 'auto', backgroundColor: 'blue', padding: '10px', borderRadius: '10px'}}>{displayedSchedule ? `${displayedSchedule[0].date}` : \"No schedules to display\"}</h1>\n            <br></br>\n            <div style={{display: 'flex', justifyContent: index > 0 && index < schedules.length - 1 ? 'space-between' : 'center', width: '15%', margin: 'auto'}}>\n                {index > 0 ? <Button variant=\"primary\" type=\"button\" onClick={handlePrevious} style={{width: '100px'}}>Previous</Button> : null}\n                {index < schedules.length - 1 ? <Button variant=\"primary\" type=\"button\" onClick={handleNext} style={{width: '93px'}}>Next</Button> : null}\n            </div>\n            <br></br>\n            {displayedSchedule ? (\n            <div style={{display: 'flex', justifyContent: 'space-between', width: '40%', margin: 'auto', color: 'black', borderRadius: '20px', backgroundColor: '#FFCC66', padding: '20px'}}>\n                <div>\n                    <h3>Number of Activities: </h3>\n                    <h3>Sleep Duration: </h3>\n                    <h3>Number of Foods: </h3>\n                </div>\n                <div>\n                    <h2 style={{display: 'table', fontSize: '28px'}}>{activitiesTotal}</h2>\n                    <h2 style={{display: 'table', fontSize: '28px'}}>{sleepDuration}</h2>\n                    <h2 style={{display: 'table', fontSize: '28px'}}>{foods}</h2>\n                </div>\n            </div> ) : null}\n            <br></br>\n            <br></br>\n            <Table striped bordered hover variant=\"dark\" style={{width: '80%', margin: 'auto'}}>\n                {displayedSchedule ? (\n                    <thead>\n                        <tr>\n                            <th>Time</th>\n                            <th>Action</th>\n                            <th>Type(s)</th>\n                            <th>Details</th>\n                        </tr>\n                    </thead>\n                    ) : null}\n                    <tbody>\n                    {displayedSchedule ? (\n                        displayedSchedule[1].map((action, index) => {\n                            if (action.wakeup) {\n                                return (\n                                    <tr key={index}>\n                                        <td>{action.time.match(regex)[0]}</td>\n                                        <td colSpan=\"3\">Wakeup</td>\n                                    </tr>\n                                )\n                            } else if (action.foods) {\n                                let names = []\n                                let portions = []\n                                action.foods.forEach(food => {\n                                    names.push(food.name)\n                                    portions.push(`${food.portion} oz.`)\n                                })\n                                let groupedNames = names.join(', ')\n                                let groupedPortions = portions.join(', ')\n                                return (\n                                    <tr key={index}>\n                                        <td>{action.time.match(regex)[0]}</td>\n                                        <td>Food</td>\n                                        <td>{groupedNames}</td>\n                                        <td>{groupedPortions}</td>\n                                    </tr>\n                                )\n                            } else if (action.duration) {\n                                return (\n                                    <tr key={index}>\n                                        <td>{action.time.match(regex)[0]}</td>\n                                        <td>Activity</td>\n                                        <td>{action.name}</td>\n                                        <td>{action.duration} mins., RPE: {action.perceived_effort}</td>\n                                    </tr>\n                                )\n                            } else if (action.bedtime) {\n                                return (\n                                    <tr key={index}>\n                                        <td>{action.time.match(regex)[0]}</td>\n                                        <td colSpan=\"3\">Bedtime</td>\n                                    </tr>\n                                )\n                            }\n                        })\n                    ) : null}\n                </tbody>\n            </Table>\n            <br></br>\n            <br></br>\n            {displayedSchedule ? (\n                <Button variant=\"danger\" type=\"button\" onClick={handleShow} style={{display: 'flex', width: '12%', margin: 'auto', justifyContent: 'center'}}>Delete Schedule</Button>) : null}\n            <br></br>\n            <br></br>\n            <Modal \n                show={show}\n                onHide={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n                centered\n            >\n                <Modal.Header>\n                    <Modal.Title>You're about to delete this schedule</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Are you sure you want to delete?</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        No, take me back!\n                    </Button>\n                    <Button variant=\"danger\" onClick={handleDelete}>\n                        Yes, get rid of this schedule!\n                    </Button>\n                </Modal.Footer>\n            </Modal> \n        </div>\n    )\n}\n\nexport default DailyLog","import { useEffect, useState } from 'react';\nimport { LineChart, Line, BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nfunction History({ user, schedules, favFood, avgSleepDuration, bestPerformanceFood, optimalSleepDuration, chartOneData, chartTwoData }) {\n\n    let activitiesTotal = 0\n\n    if (schedules) {\n        schedules.forEach(schedule => {\n            activitiesTotal += schedule.activities.length\n        })\n    }\n\n    console.log(schedules)\n    console.log(favFood)\n    console.log(bestPerformanceFood)\n    console.log(optimalSleepDuration)\n\n    let name = \"User\"\n    if (user) {\n        name = user.name.charAt(0).toUpperCase() + user.name.slice(1)\n    }\n\n    return (\n        <div style={{minHeight: '100vh'}}>\n            <br></br>\n            <br></br>\n            <h1 id=\"pop\" style={{color: 'white', display: 'table', margin: 'auto', backgroundColor: 'blue', padding: '10px', borderRadius: '10px'}}>{`${name}'s History`}</h1>\n            <br></br>\n            <br></br>\n            <div style={{display: 'flex', justifyContent: 'space-between', width: '60%', margin: 'auto', color: 'black', borderRadius: '20px', backgroundColor: '#FFCC66', padding: '20px'}}>\n                <div>\n                    <h2>Total Number of Activities: </h2>\n                    <h2>Average Sleep Duration: </h2>\n                    <h2>Favorite Food: </h2>\n                    <h2>Best Food for Performance: </h2>\n                    <h2>Optimal Sleep Duration: </h2>\n                </div>\n                <div>\n                    <h2 style={{display: 'table'}}>{activitiesTotal}</h2>\n                    <h2 style={{display: 'table'}}>{avgSleepDuration ? `${avgSleepDuration.hours}h ${avgSleepDuration.mins}m` : '0h'}</h2>\n                    <h2 style={{display: 'table'}}>{favFood ? favFood.name : 'None'}</h2>\n                    <h2 style={{display: 'table'}}>{bestPerformanceFood ? bestPerformanceFood.name : 'None'}</h2>\n                    <h2 style={{display: 'table'}}>{optimalSleepDuration ? `${optimalSleepDuration.hours}h ${optimalSleepDuration.added_mins}m` : '0h'}</h2>\n                </div>\n            </div>\n            <br></br>\n            <br></br>\n            <h2 id=\"pop\" style={{color: 'white', textAlign: 'center'}}>Average RPE vs. Pre-Activity Food</h2>\n            <br></br>\n            <ResponsiveContainer width=\"60%\" height={300}>\n                <BarChart\n                width={500}\n                height={300}\n                data={chartOneData}\n                margin={{\n                    top: 5,\n                    right: 30,\n                    left: 20,\n                    bottom: 5,\n                }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" style={{fontSize: 'small'}} />\n                    <YAxis />\n                    <Tooltip />\n                    {/* <Bar dataKey=\"pv\" fill=\"#8884d8\" /> */}\n                    <Bar dataKey=\"RPE\" fill=\"#82ca9d\" />\n                </BarChart>\n            </ResponsiveContainer>\n            <br></br>\n            <br></br>\n            <h2 id=\"pop\" style={{color: 'white', textAlign: 'center'}}>Average RPE vs. Sleep Duration</h2>\n            <br></br>\n            <ResponsiveContainer width=\"60%\" height={300}>\n                <BarChart\n                width={500}\n                height={300}\n                data={chartTwoData}\n                margin={{\n                    top: 5,\n                    right: 30,\n                    left: 20,\n                    bottom: 5,\n                }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"duration\" style={{fontSize: 'small'}} />\n                    <YAxis />\n                    <Tooltip />\n                    <Bar dataKey=\"RPE\" fill=\"#8884d8\" />\n                    {/* <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" /> */}\n                </BarChart>\n            </ResponsiveContainer>\n            <br></br>\n            <br></br>\n            <br></br>\n        </div>\n    )\n}\n\nexport default History","import { useState } from 'react'\nimport { Form, Button, Modal } from 'react-bootstrap'\n\nfunction EditProfileForm({ user, handleUserUpdate, handleUserDelete, errors }) {\n    const [show, setShow] = useState(false)\n    const [profileData, setProfileData] = useState({\n        name: user.name,\n        email: user.email,\n        weight: user.weight\n    })\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        handleUserUpdate(profileData)\n    }\n\n    function handleClose() {\n        setShow(false)\n    }\n\n    function handleShow(e) {\n        e.target.blur()\n        setShow(true)\n    }\n\n    function handleDeleteConfirmation() {\n        handleUserDelete()\n        setShow(false)\n    }\n\n\n    return (\n        <div style={{minHeight: '100vh'}}>\n            <br></br>\n            <br></br>\n            <br></br>\n            <section className=\"gradient-custom\">\n                    <div className=\"container py-5 h-100\">\n                        <div className=\"row justify-content-center align-items-center h-100\">\n                            <div className=\"col-12 col-lg-9 col-xl-7\">\n                                <div className=\"card shadow-2-strong card-registration\" style={{borderRadius: \"15px\"}}>\n                                    <div className=\"card-body p-4 p-md-5\">\n                                        <h3 className=\"mb-4 pb-2 pb-md-0 mb-md-3\">Edit FuelRight Profile</h3>\n                                        <Form onSubmit={handleSubmit}>\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n                                                <Form.Label>Name</Form.Label>\n                                                <Form.Control required type=\"name\" placeholder=\"Enter name\" value={profileData.name} onChange={e => setProfileData({...profileData, name: e.target.value})}/>\n                                            </Form.Group>\n                                            \n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                                <Form.Label>Email</Form.Label>\n                                                <Form.Control required type=\"email\" placeholder=\"Enter email\" value={profileData.email} onChange={e => setProfileData({...profileData, email: e.target.value})} />\n                                            </Form.Group>\n                                            \n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicWeight\">\n                                                <Form.Label>Weight</Form.Label>\n                                                <Form.Control required type=\"text\" placeholder=\"Weight in lbs.\" value={profileData.weight} onChange={e => setProfileData({...profileData, weight: e.target.value})}/>\n                                            </Form.Group>\n                                            <div style={{display: 'inline-flex', flexDirection: 'row', width: '50%'}}>\n                                                <Button variant=\"primary\" type=\"submit\" style={{marginRight: '10px'}}>\n                                                    Save Changes\n                                                </Button>\n                                                <Button variant=\"danger\" type=\"button\" onClick={handleShow}>\n                                                    Delete Account\n                                                </Button>\n                                                <Modal \n                                                    show={show}\n                                                    onHide={handleClose}\n                                                    backdrop=\"static\"\n                                                    keyboard={false}\n                                                    centered\n                                                >\n                                                    <Modal.Header>\n                                                        <Modal.Title>You're about to delete your FuelRight profile...</Modal.Title>\n                                                    </Modal.Header>\n                                                    <Modal.Body>All of your data will be lost - schedules, activities, foods, etc. Are you sure you want to delete?</Modal.Body>\n                                                    <Modal.Footer>\n                                                        <Button variant=\"secondary\" onClick={handleClose}>\n                                                            No, take me back!\n                                                        </Button>\n                                                        <Button variant=\"danger\" onClick={handleDeleteConfirmation}>\n                                                            Yes, delete my profile :(\n                                                        </Button>\n                                                    </Modal.Footer>\n                                                </Modal> \n                                            </div>\n                                            <br></br>\n                                            {errors !== [] ? \n                                            (<div>\n                                                {errors.map((error, index)=> (<p style={{color: 'red', marginBottom: '0px', marginTop: '10px'}} key={index}>{error}</p>))}\n                                            </div>)\n                                            : null}\n                                        </Form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n            </section>\n        </div>\n    )\n}\n\nexport default EditProfileForm","import React from 'react';\nimport '../App.css';\nimport NavBar from './NavBar'\nimport Login from './Login'\nimport TrackerForm from './TrackerForm'\nimport DailyLog from './DailyLog'\nimport History from './History'\nimport EditProfileForm from './EditProfileForm'\nimport { Switch, Route } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [user, setUser] = useState(null)\n  const [schedules, setSchedules] = useState([])\n  const [displayForm, setDisplayForm] = useState(true)\n  // const [scheduleCheck, setScheduleCheck] = useState(true)\n  const [index, setIndex] = useState(0)\n  const [displayedSchedule, setDisplayedSchedule] = useState(null)\n  const [favFood, setFavFood] = useState(null)\n  const [errors, setErrors] = useState([])\n  const [avgSleepDuration, setAverageSleepDuration] = useState(null)\n  const [bestPerformanceFood, setBestPerformanceFood] = useState(null)\n  const [optimalSleepDuration, setOptimalSleepDuration] = useState(null)\n  const [chartOneData, setChartOneData] = useState(null)\n  const [chartTwoData, setChartTwoData] = useState(null)\n  \n  const history = useHistory()\n\n  useEffect(() => {\n    fetch(\"/me\").then((response) => {\n      if (response.ok) {\n        response.json().then((user) => {\n          setUser(user)\n          getSchedules()\n        });\n      }\n    });\n  }, []);\n\n  function onLogin(data) {\n    setUser(data)\n    getSchedules()\n  }\n\n  function getSchedules() {\n    fetch('/schedules')\n    .then(res => res.json())\n    .then(data => {\n      if (data.length !== 0) {\n        setSchedules(data)\n        setIndex(data.length - 1)\n        setDisplayedSchedule(null)\n        setFavFood(null)\n        setAverageSleepDuration(null)\n        setBestPerformanceFood(null)\n        setOptimalSleepDuration(null)\n        setChartOneData(null)\n        setChartTwoData(null)\n        getSingleSchedule(data[data.length - 1].id)\n        console.log(data)\n      } else {\n        setSchedules([])\n        setIndex(0)\n        setDisplayedSchedule(null)\n        setFavFood(null)\n        setAverageSleepDuration(null)\n        setBestPerformanceFood(null)\n        setOptimalSleepDuration(null)\n        setChartOneData(null)\n        setChartTwoData(null)\n      }\n    })\n  }\n\n  function getSingleSchedule(id) {\n    fetch(`schedules/${id}`)\n    .then(res => res.json())\n    .then(data => {\n      setDisplayedSchedule(data)\n      getFavFood()\n    })\n  }\n\n  function getFavFood() {\n    fetch('/favorite_food')\n    .then(res => res.json())\n    .then(data => {\n      if (data.error) {\n        getSleepDurations()\n      } else {\n        setFavFood(data)\n        getSleepDurations()\n      }\n    })\n  }\n\n  function getSleepDurations() {\n    fetch('/sleep_durations')\n    .then(res => res.json())\n    .then(data => {\n      console.log(data)\n      if (data.error) {\n        getBestPerformanceFood()\n      } else {\n        setAverageSleepDuration(data)\n        getBestPerformanceFood()\n      }\n    })\n  }\n\n  function getBestPerformanceFood() {\n    fetch('/performance_food')\n    .then(res => res.json())\n    .then(data => {\n      if (data.error) {\n        getOptimalSleepDuration()\n      } else {\n        setBestPerformanceFood(data)\n        getOptimalSleepDuration()\n      }\n    })\n  }\n\n  function getOptimalSleepDuration() {\n    fetch('/optimal_sleep_duration')\n    .then(res => res.json())\n    .then(data => {\n      if (data.error) {\n        getChartOneData()\n      } else {\n        setOptimalSleepDuration(data)\n        getChartOneData()\n      }\n    })\n  }\n\n  function getChartOneData() {\n    fetch('/chart_one_data')\n    .then(res => res.json())\n    .then(data => {\n      if (data.error) {\n        getChartTwoData()\n      } else {\n        setChartOneData(data)\n        getChartTwoData()\n      }\n    })\n  }\n\n  function getChartTwoData() {\n    fetch('/chart_two_data')\n    .then(res => res.json())\n    .then(data => {\n      if (data.error) {\n        setChartTwoData(null)\n      } else {\n        setChartTwoData(data)\n      }\n    })\n  }\n\n  function handleSchedulesScroll(id) {\n    fetch(`schedules/${id}`)\n    .then(res => res.json())\n    .then(data => {\n      setDisplayedSchedule(data)\n    })\n  }\n\n  async function logOut() {\n    const res = await fetch(\"/logout\", {\n      method: \"DELETE\"\n    })\n    if (res.ok) {\n      setUser(null)\n      setSchedules([])\n      setDisplayForm(true)\n      setIndex(0)\n      setDisplayedSchedule(null)\n      setFavFood(null)\n      setErrors([])\n      setAverageSleepDuration(null)\n      setBestPerformanceFood(null)\n      setOptimalSleepDuration(null)\n      setChartOneData(null)\n      setChartTwoData(null)\n      history.push(\"/login\")\n    }\n  }\n\n  async function handleUserUpdate(updatedUser) {\n    const res = await fetch(`/users/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\"Content-type\": \"application/json\"},\n      body: JSON.stringify(updatedUser)\n    })\n    const data = await res.json()\n    if (res.ok) {\n      setUser(data)\n      setErrors([])\n      history.push(\"/\")\n    } else {\n      setErrors(data.errors)\n    }\n  }\n\n  function handleUserDelete() {\n    fetch(`/users/${user.id}`, {\n      method: \"DELETE\",\n    })\n    .then(() => logOut())\n  }\n\n  async function addEntry(action, payload) {\n    if (action === 'activity') {\n      action = 'activitie'\n    }\n    const res = await fetch(`/${action}s`, {\n      method: \"POST\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify(payload)\n    })\n    const data = await res.json()\n    console.log(data)\n    if (res.ok) {\n      setDisplayForm(false)\n      setErrors([])\n      getSchedules()\n    } else {\n      setErrors(data.errors)\n    }\n  }\n\n  function handleScheduleDelete(id) {\n    fetch(`/schedules/${id}`, {\n      method: \"DELETE\"\n    })\n    .then(() => getSchedules())\n  }\n\n  console.log(user)\n  console.log(avgSleepDuration)\n\n  return (\n    <div className=\"App\">\n      {user ? <NavBar user={user} logout={logOut} setDisplayForm={setDisplayForm} setErrors={setErrors} /> : null}\n      <Switch>\n        <Route exact path=\"/\">\n          {user ? <TrackerForm addEntry={addEntry} displayForm={displayForm} setDisplayForm={setDisplayForm} errors={errors} /> : <Login onLogin={onLogin} setDisplayForm={setDisplayForm} />}\n        </Route>\n        <Route exact path=\"/day\">\n          {user ? <DailyLog schedules={schedules} index={index} setIndex={setIndex} handleSchedulesScroll={handleSchedulesScroll} displayedSchedule={displayedSchedule} handleScheduleDelete={handleScheduleDelete} /> : <Login onLogin={onLogin} setDisplayForm={setDisplayForm} />}\n        </Route>\n        <Route exact path=\"/history\">\n          {user ? <History user={user} schedules={schedules} favFood={favFood} avgSleepDuration={avgSleepDuration} bestPerformanceFood={bestPerformanceFood} optimalSleepDuration={optimalSleepDuration} chartOneData={chartOneData} chartTwoData={chartTwoData} /> : <Login onLogin={onLogin} setDisplayForm={setDisplayForm} />}\n        </Route>\n        <Route exact path=\"/edit\">\n          {user ? <EditProfileForm user={user} handleUserUpdate={handleUserUpdate} handleUserDelete={handleUserDelete} errors={errors}/> : <Login onLogin={onLogin} setDisplayForm={setDisplayForm} />}\n        </Route>\n        <Route exact path=\"/login\">\n          <Login onLogin={onLogin} setDisplayForm={setDisplayForm} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}