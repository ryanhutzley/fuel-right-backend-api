{"version":3,"sources":["Components/NavBar.js","Components/Login.js","Components/TrackerForm.js","Components/DailyLog.js","Components/History.js","Components/EditProfileForm.js","Components/App.js","reportWebVitals.js","index.js"],"names":["NavBar","user","logout","setDisplayForm","setErrors","useState","window","innerWidth","windowWidth","setWindowWidth","handleClick","addEventListener","Navbar","bg","variant","sticky","style","minWidth","Container","id","Brand","Nav","className","NavDropdown","title","Item","onClick","as","Link","to","Divider","color","marginBottom","marginTop","name","Login","onLogin","formDisplayed","setFormDisplayed","email","password","existingUser","setExistingUser","errors","password_confirmation","weight","formData","setFormData","history","useHistory","e","a","preventDefault","target","blur","fetch","method","headers","body","JSON","stringify","res","json","data","ok","push","console","log","minHeight","display","alignItems","flexDirection","textAlign","width","margin","textDecorationLine","fontStyle","borderRadius","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","value","onChange","Button","marginLeft","map","error","index","TrackerForm","addEntry","displayForm","action","setAction","date","setDate","time","setTime","duration","perceived_effort","activity","setActivity","portion","foods","setFoods","wakeup","food","bedtime","selected","setSelected","payload","toLowerCase","el","Text","list","foodsCopy","slice","handleFoodName","handleFoodPortion","length","DailyLog","schedules","setIndex","handleSchedulesScroll","displayedSchedule","handleScheduleDelete","show","setShow","regex","activitiesTotal","sleepDuration","filter","foodAction","foodNames","forEach","hours","added_mins","handleClose","infoWidth","buttonWidth","datePadding","infoPadding","scrollButtonWidth","backgroundColor","padding","justifyContent","newIndex","flexWrap","marginRight","float","Table","striped","bordered","hover","match","colSpan","names","portions","groupedNames","join","groupedPortions","Modal","onHide","backdrop","keyboard","centered","Header","Title","Body","Footer","History","favFood","avgSleepDuration","bestPerformanceFood","optimalSleepDuration","chartOneData","chartTwoData","schedule","activities","charAt","toUpperCase","namePadding","mins","ResponsiveContainer","height","BarChart","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","fontSize","YAxis","Tooltip","Bar","fill","EditProfileForm","handleUserUpdate","handleUserDelete","profileData","setProfileData","App","setUser","setSchedules","setDisplayedSchedule","setFavFood","setAverageSleepDuration","setBestPerformanceFood","setOptimalSleepDuration","setChartOneData","setChartTwoData","getSchedules","then","getSleepDurations","getBestPerformanceFood","getOptimalSleepDuration","getChartOneData","getChartTwoData","logOut","updatedUser","useEffect","response","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8102cb41.chunk.js","sourcesContent":["import { Navbar, Container, NavDropdown, Nav } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useState } from 'react'\n\nfunction NavBar({ user, logout, setDisplayForm, setErrors }) {\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth)\n\n    function handleClick() {\n        setDisplayForm(true)\n        setErrors([])\n    }\n\n    window.addEventListener('resize', () => setWindowWidth(window.innerWidth))\n\n    return (\n        <>\n            {windowWidth < 768 ? (\n                <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\" style={{minWidth: '100vw'}}>\n                    <Container id=\"container\">\n                    <Navbar.Brand id=\"brand\">FuelRight</Navbar.Brand>\n                        <Nav className=\"me-auto\">\n                            <NavDropdown title=\"Your Profile\" id=\"basic-nav-dropdown\">\n                                <NavDropdown.Item className=\"link\" onClick={handleClick} as={Link} to=\"/\">Tracker</NavDropdown.Item>\n                                <NavDropdown.Item className=\"link\" onClick={handleClick} as={Link} to=\"/day\">Your Day</NavDropdown.Item>\n                                <NavDropdown.Item className=\"link\" onClick={handleClick} as={Link} to=\"/history\">Your History</NavDropdown.Item>\n                                <NavDropdown.Item className=\"link\" onClick={handleClick} as={Link} to=\"/edit\">Edit Profile</NavDropdown.Item>\n                                <NavDropdown.Item onClick={logout} className=\"link\">Logout</NavDropdown.Item>\n                            </NavDropdown>\n                        </Nav>\n                    </Container>\n                </Navbar>\n            ) : (\n            <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\" style={{minWidth: '100vw'}}>\n                <Container id=\"container\">\n                <Navbar.Brand id=\"brand\">FuelRight</Navbar.Brand>\n                    <Nav className=\"me-auto\">\n                        {user ? null : <Nav.Link className=\"link\" as={Link} to=\"/login\">Login</Nav.Link>}\n                        <Nav.Link className=\"link\" onClick={handleClick} as={Link} to=\"/\">Tracker</Nav.Link>\n                        <Nav.Link className=\"link\" onClick={handleClick} as={Link} to=\"/day\">Your Day</Nav.Link>\n                        <Nav.Link className=\"link\" onClick={handleClick} as={Link} to=\"/history\">Your History</Nav.Link>\n                        <NavDropdown title=\"Your Profile\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item className=\"link\" onClick={handleClick} as={Link} to=\"/edit\">Edit Profile</NavDropdown.Item>\n                            <NavDropdown.Divider />\n                            <NavDropdown.Item onClick={logout} className=\"link\">Logout</NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                    {user ? (<p style={{color: 'white', marginBottom: '5px', marginTop: '5px'}}><span style={{color: 'white'}}>Signed in as:</span> {user.name}</p>) : null}\n                </Container>\n            </Navbar> )}\n        </>\n    )\n}\n\nexport default NavBar","import { Form, Button } from 'react-bootstrap'\nimport { useHistory } from 'react-router'\nimport { useState } from 'react'\n\nfunction Login({ onLogin, setDisplayForm }) {\n    const [formDisplayed, setFormDisplayed] = useState(true)\n    const [existingUser, setExistingUser] = useState({\n        email: \"\",\n        password: \"\"\n    })\n    const [errors, setErrors] = useState([])\n    const [formData, setFormData] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        password_confirmation: \"\",\n        weight: \"\"\n    })\n\n    const history = useHistory()\n\n    // console.log(history)\n    console.log(onLogin)\n\n    function handleClick() {\n        setFormDisplayed(!formDisplayed)\n        setFormData({\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            password_confirmation: \"\",\n            weight: \"\"\n        })\n        setExistingUser({ email: \"\", password: \"\" })\n        setErrors([])\n    }\n\n    async function handleSignup(e) {\n        e.preventDefault()\n        e.target.blur()\n        const res = await fetch(\"/signup\", {\n            method: \"POST\",\n            headers: {\"Content-type\": \"application/json\"},\n            body: JSON.stringify(formData)\n        })\n        const data = await res.json()\n        if (res.ok) {\n            onLogin(data) // <== error: this is not a function??, handleUser is an attempt to avoid passing down state setter\n            setDisplayForm(true)\n            history.push(\"/\") // <== pushing to day instead of tracker page and I don't know why\n        } else {\n            setErrors(data.errors)\n            setFormData({\n                name: \"\",\n                email: \"\",\n                password: \"\",\n                password_confirmation: \"\",\n                weight: \"\"\n            })\n        }\n    }\n\n    async function handleLogin(e) {\n        e.preventDefault()\n        e.target.blur()\n        const res = await fetch(\"/login\", {\n          method: \"POST\",\n          headers: {\"Content-Type\": \"application/json\"},\n          body: JSON.stringify(existingUser)\n        })\n        const data = await res.json()\n        if (res.ok) {\n            onLogin(data)\n            setDisplayForm(true)\n            history.push(\"/\")\n        } else {\n            setErrors(data.errors)\n            setExistingUser({ email: \"\", password: \"\" })\n        }\n    }\n\n    // console.log(formData)\n    // console.log(existingUser)\n\n    return (\n        <div  style={{minHeight: '100vh', minWidth: '100vw'}}>\n            {formDisplayed ? (\n                <>\n                <div style={{display: 'flex', alignItems:'center', flexDirection: 'column', textAlign: 'center', width: '80%', margin: 'auto', color: 'white'}}>\n                    <div id=\"pop\">\n                        <h1 style={{marginTop: '50px', textAlign: 'center'}}>Welcome to <span id=\"brand\" style={{textDecorationLine: 'underline'}}>FuelRight</span></h1>\n                        <br></br>\n                        <br></br>\n                        <h3 style={{fontStyle: 'italic'}}>A digital lifestyle log so you can optimize your performance in the arena of your choosing</h3>\n                        <br></br>\n                        <h3 style={{fontStyle: 'italic'}}>Unlocking a better you is hard...</h3>\n                        <br></br>\n                        <br></br>\n                        <h3><span id=\"brand\" style={{textDecorationLine: 'underline', fontStyle: 'bolder'}}>FuelRight</span> makes it simple</h3>\n                    </div>\n                </div>\n                <section className=\"gradient-custom\">\n                    <div className=\"container py-5 h-100\">\n                        <div className=\"row justify-content-center align-items-center h-100\">\n                            <div className=\"col-12 col-lg-9 col-xl-7\">\n                                <div className=\"card shadow-2-strong card-registration\" style={{borderRadius: \"15px\"}}>\n                                    <div className=\"card-body p-4 p-md-5\">\n                                        <h3 className=\"mb-4 pb-2 pb-md-0 mb-md-3\">FuelRight Signup</h3>\n                                        <Form onSubmit={handleSignup}>\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n                                                <Form.Label>Name</Form.Label>\n                                                <Form.Control required type=\"name\" placeholder=\"Enter name\" value={formData.name} onChange={e => setFormData({...formData, name: e.target.value})}/>\n                                            </Form.Group>\n                                            \n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                                <Form.Label>Email</Form.Label>\n                                                <Form.Control required type=\"email\" placeholder=\"Enter email\" value={formData.email} onChange={e => setFormData({...formData, email: e.target.value})} />\n                                            </Form.Group>\n\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                                                <Form.Label>Password</Form.Label>\n                                                <Form.Control required type=\"password\" placeholder=\"Enter Password\" value={formData.password} onChange={e => setFormData({...formData, password: e.target.value})} />\n                                            </Form.Group>\n                                            \n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicPasswordConfirmation\">\n                                                <Form.Label>Password Confirmation</Form.Label>\n                                                <Form.Control required type=\"password\" placeholder=\"Password Confirmation\" value={formData.password_confirmation} onChange={e => setFormData({...formData, password_confirmation: e.target.value})}/>\n                                            </Form.Group>\n                                            \n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicWeight\">\n                                                <Form.Label>Weight</Form.Label>\n                                                <Form.Control required type=\"text\" placeholder=\"Weight in lbs.\" value={formData.weight} onChange={e => setFormData({...formData, weight: e.target.value})}/>\n                                            </Form.Group>\n                                            <div style={{display: 'inline-flex', flexDirection: 'row'}}>\n                                                <Button variant=\"primary\" type=\"submit\">\n                                                    Create Account\n                                                </Button>\n                                                <p style={{marginLeft: '15px', marginBottom: '0px', marginTop: '5px'}}>Already have an account? Login <a className=\"link\" onClick={handleClick}>here</a> </p>\n                                            </div>\n                                            <br></br>\n                                            <br></br>\n                                            {errors !== [] ? \n                                            (<div>\n                                                {errors.map((error, index)=> (<p style={{color: 'red', marginBottom: '0px', marginTop: '10px'}} key={index}>{error}</p>))}\n                                            </div>)\n                                            : null}\n                                        </Form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <br></br>\n                    <br></br>\n                </section>\n                </>\n            ) : (\n                <>\n                    <section className=\"gradient-custom\">\n                        <div className=\"container py-6\">\n                            <div className=\"row justify-content-center align-items-center h-100\">\n                                <div className=\"col-12 col-lg-9 col-xl-7\">\n                                    <div className=\"card shadow-2-strong card-registration\" style={{borderRadius: \"15px\"}}>\n                                        <div className=\"card-body p-4 p-md-5\">\n                                            <h3 className=\"mb-4 pb-2 pb-md-0 mb-md-5\">FuelRight Login</h3>\n                                            <Form onSubmit={handleLogin}>\n                                                \n                                                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                                    <Form.Label>Email</Form.Label>\n                                                    <Form.Control required type=\"email\" placeholder=\"Enter email\" value={existingUser.email} onChange={e => setExistingUser({...existingUser, email: e.target.value})}/>\n                                                </Form.Group>\n\n                                                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                                                    <Form.Label>Password</Form.Label>\n                                                    <Form.Control required type=\"password\" placeholder=\"Enter Password\" value={existingUser.password} onChange={e => setExistingUser({...existingUser, password: e.target.value})}/>\n                                                </Form.Group>\n                                          \n                                                <div style={{display: 'inline-flex', flexDirection: 'row'}}>\n                                                    <Button variant=\"primary\" type=\"submit\">\n                                                        Login\n                                                    </Button>\n                                                    <p style={{marginLeft: '15px', marginBottom: '0px', marginTop: '5px'}}>Back to <a className=\"link\" onClick={handleClick}>Signup</a> </p>\n                                                </div>\n                                                <br></br>\n                                                {errors !== [] ? \n                                                (<div>\n                                                    {errors.map((error, index)=> (<p style={{color: 'red', marginBottom: '0px', marginTop: '10px'}} key={index}>{error}</p>))}\n                                                </div>)\n                                                : null}\n                                            </Form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                </>\n            )\n            }\n        </div>\n    )\n}\n\nexport default Login","import { Form, Button } from 'react-bootstrap'\nimport { useState } from 'react'\n\nfunction TrackerForm({ addEntry, displayForm, setDisplayForm, errors }) {\n    const [action, setAction] = useState(\"\")\n    const [date, setDate] = useState(\"\")\n    const [time, setTime] = useState(\"\")\n    const [activity, setActivity] = useState({\n        name: \"\",\n        duration: \"\",\n        perceived_effort: \"\"\n    })\n    const [foods, setFoods] = useState([{ name: \"\", portion: \"\" }])\n    const [selected, setSelected] = useState({ wakeup: false, food: false, activity: false, bedtime: false })\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        e.target[3].blur()\n        if (selected.wakeup) {   \n            let payload = { date, time }\n            addEntry(action.toLowerCase(), payload)\n            setSelected({...selected, wakeup: false})\n            setTime(\"\")\n            setDate(\"\")\n            setAction(\"\")\n            // setDisplayForm(false)\n        }\n        else if (selected.food) {\n            let payload = foods.map(el => {\n                return {...el, date, time}\n            })\n            addEntry(action.toLowerCase(), payload)\n            setSelected({...selected, food: false})\n            setTime(\"\")\n            setDate(\"\")\n            setFoods([{ name: \"\", portion: \"\" }])\n            setAction(\"\")\n            // setDisplayForm(false)\n        }\n        else if (selected.activity) {\n            let payload = {...activity, date: date, time: time}\n            addEntry(action.toLowerCase(), payload)\n            setSelected({...selected, activity: false})\n            setTime(\"\")\n            setDate(\"\")\n            setActivity({ name: \"\", duration: \"\", perceived_effort: \"\" })\n            setAction(\"\")\n            // setDisplayForm(false)\n        } else if (selected.bedtime) {\n            let payload = { date, time }\n            addEntry(action.toLowerCase(), payload)\n            setSelected({...selected, bedtime: false})\n            setTime(\"\")\n            setDate(\"\")\n            setAction(\"\")\n            // setDisplayForm(false)\n        }\n    }\n\n    function handleFoodName(e, index) {\n        let foodsCopy = foods.slice(0)\n        foodsCopy[index].name = e.target.value\n        setFoods(foodsCopy)\n    }\n\n    function handleFoodPortion(e, index) {\n        let foodsCopy = foods.slice(0)\n        foodsCopy[index].portion = e.target.value\n        setFoods(foodsCopy)\n    }\n\n    function handleActionChange(e) {\n        setAction(e.target.value)\n        if (e.target.value === \"Food\") {\n            setSelected({ wakeup: false, food: true, activity: false, bedtime: false })\n            setActivity({ name: \"\", duration: \"\", perceived_effort: \"\" })\n        } else if (e.target.value === \"Activity\") {\n            setSelected({ wakeup: false, food: false, activity: true, bedtime: false })\n            setFoods([{ name: \"\", portion: \"\" }])\n        } else if (e.target.value === \"Wakeup\") {\n            setSelected({ wakeup: true, food: false, activity: false, bedtime: false })\n            setActivity({ name: \"\", duration: \"\", perceived_effort: \"\" })\n            setFoods([{ name: \"\", portion: \"\" }])\n            return null\n        } else if (e.target.value === \"Bedtime\") {\n            setSelected({ wakeup: false, food: false, activity: false, bedtime: true })\n            setActivity({ name: \"\", duration: \"\", perceived_effort: \"\" })\n            setFoods([{ name: \"\", portion: \"\" }])\n            return null\n        }\n    }\n\n    function handleAddFood(e) {\n        e.target.blur()\n        setFoods([...foods, { name: \"\", portion: \"\" }])\n    }\n\n    function handleRemoveFood(e) {\n        e.target.blur()\n        if (foods.length === 1) {\n            return null\n        } else {\n            setFoods(foods.slice(0, -1)) \n        }\n    }\n\n    console.log(errors)\n    console.log(foods)\n\n    return (\n        <>\n            {displayForm ? (\n            <section className=\"gradient-custom\" style={{minHeight: '100vh', minWidth: '100vw'}}>\n                <div className=\"container py-6\">\n                    <div className=\"row justify-content-center align-items-center h-100\">\n                        <div className=\"col-12 col-lg-9 col-xl-7\">\n                            <div className=\"card shadow-2-strong card-registration\" style={{borderRadius: \"15px\"}}>\n                                <div className=\"card-body p-4 p-md-5\">\n                                    <h3 className=\"mb-4 pb-2 pb-md-0 mb-md-3\">FuelRight Monitoring</h3>\n                                    <Form onSubmit={handleSubmit}>\n                                        <Form.Text>Please provide information regarding your food consumption and activity results so that we can help get you on the path to success!</Form.Text>\n                                        <br></br>\n                                        <br></br>\n                                        <Form.Group className=\"mb-3\" controlId=\"formBasicDate\">\n                                            <Form.Label>Date</Form.Label>\n                                            <Form.Control required type=\"date\" value={date} onChange={e => setDate(e.target.value)}/>\n                                        </Form.Group>\n                                        \n                                        <Form.Group className=\"mb-3\" controlId=\"formBasicTime\">\n                                            <Form.Label>Time</Form.Label>\n                                            <Form.Control required type=\"time\" value={time} onChange={e => setTime(e.target.value)}/>\n                                        </Form.Group>\n\n                                        <Form.Group className=\"mb-3\" controlId=\"formBasicAction\">\n                                            <Form.Label>Action</Form.Label>\n                                            <Form.Control required list=\"action-list\" type=\"text\" value={action} onChange={handleActionChange}/>\n                                            <datalist id=\"action-list\">\n                                                <option value=\"Wakeup\"/>\n                                                <option value=\"Food\" />\n                                                <option value=\"Activity\"/>\n                                                <option value=\"Bedtime\"/>\n                                            </datalist>\n                                        </Form.Group>\n                                        {selected.food ? (\n                                            foods.map((food, index) => {\n                                                return (\n                                                    <Form.Group className=\"mb-3\" controlId=\"formBasicFood\" key={index}>\n                                                        <Form.Label>Type of Food</Form.Label>\n                                                        <Form.Control required type=\"text\" value={food.name} onChange={e => handleFoodName(e, index)}/>\n                                                        <Form.Label>Quantity (oz.)</Form.Label>\n                                                        <Form.Control required type=\"text\" value={food.portion} onChange={e => handleFoodPortion(e, index)}/>\n                                                    </Form.Group>\n                                                )\n                                            }))\n                                            : null}\n                                        {selected.food ? (\n                                            <div>\n                                                <Button variant=\"secondary\" type=\"button\" onClick={handleAddFood}>Add Foods</Button>{\" \"}\n                                                <Button variant=\"danger\" type=\"button\" onClick={handleRemoveFood}>Remove Foods</Button>\n                                                <br></br>\n                                                <br></br>\n                                            </div>\n                                        ) : null}\n                                        {selected.activity ? (\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicFood\">\n                                                <Form.Label>Type of activity</Form.Label>\n                                                <Form.Control required type=\"text\" value={activity.name} onChange={e => setActivity({...activity, name: e.target.value})}/>\n                                                <Form.Label>Duration (mins.)</Form.Label>\n                                                <Form.Control required type=\"text\" value={activity.duration} onChange={e => setActivity({...activity, duration: e.target.value})}/>\n                                                <br></br>\n                                                <Form.Label>Rate Perceived Effort</Form.Label> \n                                                <br></br>\n                                                <Form.Text>(How did this workout feel compared to past efforts of similar intensity/duration? scale: 1-10, 1 = way worse, 5 = the same, 10 = way better)</Form.Text>\n                                                <br></br>\n                                                <br></br>\n                                                <Form.Control required type=\"text\" value={activity.perceived_effort} onChange={e => setActivity({...activity, perceived_effort: e.target.value})}/>\n                                            </Form.Group>\n                                        ) : null}\n                                        <Button variant=\"primary\" type=\"submit\">\n                                            Submit Entry\n                                        </Button>\n                                        <br></br>\n                                        {errors !== [] ? \n                                        (<div>\n                                            {errors.map((error, index)=> (<p style={{color: 'red', marginBottom: '0px', marginTop: '10px'}} key={index}>{error}</p>))}\n                                        </div>)\n                                        : null}\n                                    </Form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section> ) : (\n                <section className=\"gradient-custom\" style={{minHeight: '100vh', minWidth: '100vw'}}>\n                    <div className=\"container py-6\">\n                        <div className=\"row justify-content-center align-items-center h-100\">\n                            <div className=\"col-12 col-lg-9 col-xl-7\">\n                                <div className=\"card shadow-2-strong card-registration\" style={{borderRadius: \"15px\"}}>\n                                    <div className=\"card-body p-4 p-md-5\">\n                                            <h3 className=\"mb-4 pb-2 pb-md-0 mb-md-3\">Your entry has been recorded!</h3>\n                                            <a className=\"link\" onClick={() => setDisplayForm(true)}>Make another submission</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            )}\n        </>\n    )\n}\n\nexport default TrackerForm","import { Table, Button, Modal } from 'react-bootstrap'\nimport { useEffect, useState } from 'react'\n\nfunction DailyLog({ schedules, index, setIndex, handleSchedulesScroll, displayedSchedule, handleScheduleDelete }) {\n    const [show, setShow] = useState(false)\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth)\n    \n    const regex = /\\d+:\\d+/g\n\n    function handlePrevious(e) {\n        e.target.blur()\n        if (index !== 0) {\n            let newIndex = index - 1\n            handleSchedulesScroll(schedules[newIndex].id)\n            setIndex(newIndex)\n        }\n    }\n\n    function handleNext(e) {\n        e.target.blur()\n        if (index !== schedules.length - 1) {\n            let newIndex = index + 1\n            handleSchedulesScroll(schedules[newIndex].id)\n            setIndex(newIndex)\n        }\n    }\n\n    let activitiesTotal = 0\n    let sleepDuration = \"Insufficient data\"\n    let foods = 0\n\n    if (displayedSchedule) {\n        let activities = displayedSchedule[1].filter(action => action.duration)\n        activitiesTotal = activities.length\n        let foodAction = displayedSchedule[1].filter(action => action.foods)\n        let foodNames = []\n        foodAction.map(action => {\n            action.foods.forEach(food => foodNames.push(food.name))\n        })\n        if (foodNames.length > 0) {\n            foods = foodNames.length\n        }\n        if (displayedSchedule[2].hours) {\n            sleepDuration = `${displayedSchedule[2].hours}h ${displayedSchedule[2].added_mins}m`\n        }\n    }\n\n    function handleShow(e) {\n        e.target.blur()\n        setShow(true)\n    }\n\n    function handleClose() {\n        setShow(false)\n    }\n\n    function handleDelete() {\n        handleScheduleDelete(displayedSchedule[0].id)\n        setShow(false)\n    }\n\n    window.addEventListener('resize', () => setWindowWidth(window.innerWidth))\n\n    let infoWidth = '26vw'\n    let buttonWidth = '12vw'\n    let datePadding = '0.5%'\n    let infoPadding = '1%'\n    let scrollButtonWidth = '15%'\n    if (windowWidth < 768) {\n        infoWidth = '50vw'\n        buttonWidth = '26vw'\n        datePadding = '3%'\n        infoPadding = '4%'\n        scrollButtonWidth = '60%'\n    }\n    \n    return (\n        <div style={{minHeight: '100vh', minWidth: '100vw'}}>\n            <br></br>\n            <br></br>\n            <h1 id=\"pop\" style={{color: 'white', display: 'table', margin: 'auto', backgroundColor: 'blue', padding: datePadding, borderRadius: '10px'}}>{displayedSchedule ? `${displayedSchedule[0].date}` : \"No schedules to display\"}</h1>\n            <br></br>\n            <div style={{display: 'flex', justifyContent: index > 0 && index < schedules.length - 1 ? 'space-between' : 'center', width: scrollButtonWidth, margin: 'auto'}}>\n                {index > 0 ? <Button variant=\"primary\" type=\"button\" onClick={handlePrevious} style={{width: '100px'}}>Previous</Button> : null}\n                {index < schedules.length - 1 ? <Button variant=\"primary\" type=\"button\" onClick={handleNext} style={{width: '93px'}}>Next</Button> : null}\n            </div>\n            <br></br>\n            {displayedSchedule ? (\n            <div style={{display: 'flex', flexDirection: 'column', width: infoWidth, margin: 'auto', color: 'black', borderRadius: '20px', backgroundColor: '#FFCC66', padding: infoPadding}}>\n                <div style={{display: 'inline-flex', flexDirection: 'row', flexWrap: 'wrap'}}>\n                    <h3 style={{marginRight: '5%'}}>Number of Activities ➡️ </h3>\n                    <h3 style={{textDecorationLine: 'underline', float: 'right'}}>{activitiesTotal}</h3>\n                </div>\n                <div style={{display: 'inline-flex', flexDirection: 'row', flexWrap: 'wrap'}}>\n                    <h3 style={{marginRight: '5%'}}>Sleep Duration ➡️ </h3>\n                    <h3 style={{textDecorationLine: 'underline', float: 'right'}}>{sleepDuration}</h3>\n                </div>\n                <div style={{display: 'inline-flex', flexDirection: 'row', flexWrap: 'wrap'}}>\n                    <h3 style={{marginRight: '5%'}}>Number of Foods ➡️ </h3>\n                    <h3 style={{textDecorationLine: 'underline', float: 'right'}}>{foods}</h3>\n                </div>\n            </div> ) : null}\n            <br></br>\n            <br></br>\n            <Table striped bordered hover variant=\"dark\" style={{width: '80%', margin: 'auto'}}>\n                {displayedSchedule ? (\n                    <thead>\n                        <tr>\n                            <th>Time</th>\n                            <th>Action</th>\n                            <th>Type(s)</th>\n                            <th>Details</th>\n                        </tr>\n                    </thead>\n                    ) : null}\n                    <tbody>\n                    {displayedSchedule ? (\n                        displayedSchedule[1].map((action, index) => {\n                            if (action.wakeup) {\n                                return (\n                                    <tr key={index}>\n                                        <td>{action.time.match(regex)[0]}</td>\n                                        <td colSpan=\"3\">Wakeup</td>\n                                    </tr>\n                                )\n                            } else if (action.foods) {\n                                let names = []\n                                let portions = []\n                                action.foods.forEach(food => {\n                                    names.push(food.name)\n                                    portions.push(`${food.portion} oz.`)\n                                })\n                                let groupedNames = names.join(', ')\n                                let groupedPortions = portions.join(', ')\n                                return (\n                                    <tr key={index}>\n                                        <td>{action.time.match(regex)[0]}</td>\n                                        <td>Food</td>\n                                        <td>{groupedNames}</td>\n                                        <td>{groupedPortions}</td>\n                                    </tr>\n                                )\n                            } else if (action.duration) {\n                                return (\n                                    <tr key={index}>\n                                        <td>{action.time.match(regex)[0]}</td>\n                                        <td>Activity</td>\n                                        <td>{action.name}</td>\n                                        <td>{action.duration} mins., RPE: {action.perceived_effort}</td>\n                                    </tr>\n                                )\n                            } else if (action.bedtime) {\n                                return (\n                                    <tr key={index}>\n                                        <td>{action.time.match(regex)[0]}</td>\n                                        <td colSpan=\"3\">Bedtime</td>\n                                    </tr>\n                                )\n                            }\n                        })\n                    ) : null}\n                </tbody>\n            </Table>\n            <br></br>\n            <br></br>\n            {displayedSchedule ? (\n                <Button variant=\"danger\" type=\"button\" onClick={handleShow} style={{display: 'flex', width: buttonWidth, margin: 'auto', justifyContent: 'center'}}>Delete Schedule</Button>) : null}\n            <br></br>\n            <br></br>\n            <Modal \n                show={show}\n                onHide={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n                centered\n            >\n                <Modal.Header>\n                    <Modal.Title>You're about to delete this schedule</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Are you sure you want to delete?</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        No, take me back!\n                    </Button>\n                    <Button variant=\"danger\" onClick={handleDelete}>\n                        Yes, get rid of this schedule!\n                    </Button>\n                </Modal.Footer>\n            </Modal> \n        </div>\n    )\n}\n\nexport default DailyLog","import { useEffect, useState } from 'react';\nimport { LineChart, Line, BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nfunction History({ user, schedules, favFood, avgSleepDuration, bestPerformanceFood, optimalSleepDuration, chartOneData, chartTwoData }) {\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth)\n\n    let activitiesTotal = 0\n\n    if (schedules) {\n        schedules.forEach(schedule => {\n            activitiesTotal += schedule.activities.length\n        })\n    }\n\n    console.log(schedules)\n    console.log(favFood)\n    console.log(bestPerformanceFood)\n    console.log(optimalSleepDuration)\n\n    let name = \"User\"\n    if (user) {\n        name = user.name.charAt(0).toUpperCase() + user.name.slice(1)\n    }\n\n    window.addEventListener('resize', () => setWindowWidth(window.innerWidth))\n\n    let infoWidth = '47vw'\n    let namePadding = '0.5%'\n    let infoPadding = '1%'\n    if (windowWidth < 768) {\n        infoWidth = '60vw'\n        namePadding = '3%'\n        infoPadding = '4%'\n    }\n\n    return (\n        <div style={{minHeight: '100vh', minWidth: '100vw'}}>\n            <br></br>\n            <br></br>\n            <h1 id=\"pop\" style={{color: 'white', display: 'table', margin: 'auto', backgroundColor: 'blue', padding: namePadding, borderRadius: '10px'}}>{`${name}'s History`}</h1>\n            <br></br>\n            <br></br>\n            <div style={{display: 'flex', flexDirection: 'column', width: infoWidth, margin: 'auto', color: 'black', borderRadius: '20px', backgroundColor: '#FFCC66', padding: infoPadding}}>\n                <div style={{display: 'inline-flex', flexDirection: 'row', flexWrap: 'wrap'}}>\n                    <h2 style={{marginRight: '1%'}}>Total Number of Activities ➡️ </h2>\n                    <h2 style={{textDecorationLine: 'underline', float: 'right'}}>{activitiesTotal}</h2>\n                </div>\n                <div style={{display: 'inline-flex', flexDirection: 'row', flexWrap: 'wrap'}}>\n                    <h2 style={{marginRight: '1%'}}>Average Sleep Duration ➡️ </h2>\n                    <h2 style={{textDecorationLine: 'underline', float: 'right'}}>{avgSleepDuration ? `${avgSleepDuration.hours}h ${avgSleepDuration.mins}m` : '0h'}</h2>\n                </div>\n                <div style={{display: 'inline-flex', flexDirection: 'row', flexWrap: 'wrap'}}>\n                    <h2 style={{marginRight: '1%'}}>Favorite Food ➡️ </h2>\n                    <h2 style={{textDecorationLine: 'underline', float: 'right'}}>{favFood ? favFood.name : 'None'}</h2>\n                </div>\n                <div style={{display: 'inline-flex', flexDirection: 'row', flexWrap: 'wrap'}}>\n                    <h2 style={{marginRight: '1%'}}>Best Food for Performance ➡️ </h2>\n                    <h2 style={{textDecorationLine: 'underline', float: 'right'}}>{bestPerformanceFood ? bestPerformanceFood.name : 'None'}</h2>\n                </div>\n                <div style={{display: 'inline-flex', flexDirection: 'row', flexWrap: 'wrap'}}>\n                    <h2 style={{marginRight: '1%'}}>Optimal Sleep Duration ➡️ </h2>\n                    <h2 style={{textDecorationLine: 'underline', float: 'right'}}>{optimalSleepDuration ? `${optimalSleepDuration.hours}h ${optimalSleepDuration.added_mins}m` : '0h'}</h2>\n                </div>\n            </div>\n            <br></br>\n            <br></br>\n            <h2 id=\"pop\" style={{color: 'white', textAlign: 'center'}}>Average RPE vs. Pre-Activity Food</h2>\n            <br></br>\n            <ResponsiveContainer width=\"60%\" height={300}>\n                <BarChart\n                width={500}\n                height={300}\n                data={chartOneData}\n                margin={{\n                    top: 5,\n                    right: 30,\n                    left: 20,\n                    bottom: 5,\n                }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" style={{fontSize: 'small'}} />\n                    <YAxis />\n                    <Tooltip />\n                    {/* <Bar dataKey=\"pv\" fill=\"#8884d8\" /> */}\n                    <Bar dataKey=\"RPE\" fill=\"#82ca9d\" />\n                </BarChart>\n            </ResponsiveContainer>\n            <br></br>\n            <br></br>\n            <h2 id=\"pop\" style={{color: 'white', textAlign: 'center'}}>Average RPE vs. Sleep Duration</h2>\n            <br></br>\n            <ResponsiveContainer width=\"60%\" height={300}>\n                <BarChart\n                width={500}\n                height={300}\n                data={chartTwoData}\n                margin={{\n                    top: 5,\n                    right: 30,\n                    left: 20,\n                    bottom: 5,\n                }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"duration\" style={{fontSize: 'small'}} />\n                    <YAxis />\n                    <Tooltip />\n                    <Bar dataKey=\"RPE\" fill=\"#8884d8\" />\n                    {/* <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" /> */}\n                </BarChart>\n            </ResponsiveContainer>\n            <br></br>\n            <br></br>\n            <br></br>\n        </div>\n    )\n}\n\nexport default History","import { useState } from 'react'\nimport { Form, Button, Modal } from 'react-bootstrap'\n\nfunction EditProfileForm({ user, handleUserUpdate, handleUserDelete, errors }) {\n    const [show, setShow] = useState(false)\n    const [profileData, setProfileData] = useState({\n        name: user.name,\n        email: user.email,\n        weight: user.weight\n    })\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        handleUserUpdate(profileData)\n    }\n\n    function handleClose() {\n        setShow(false)\n    }\n\n    function handleShow(e) {\n        e.target.blur()\n        setShow(true)\n    }\n\n    function handleDeleteConfirmation() {\n        handleUserDelete()\n        setShow(false)\n    }\n\n\n    return (\n        <div style={{minHeight: '100vh', minWidth: '100vw'}}>\n            <br></br>\n            <br></br>\n            <br></br>\n            <section className=\"gradient-custom\">\n                    <div className=\"container py-5 h-100\">\n                        <div className=\"row justify-content-center align-items-center h-100\">\n                            <div className=\"col-12 col-lg-9 col-xl-7\">\n                                <div className=\"card shadow-2-strong card-registration\" style={{borderRadius: \"15px\"}}>\n                                    <div className=\"card-body p-4 p-md-5\">\n                                        <h3 className=\"mb-4 pb-2 pb-md-0 mb-md-3\">Edit FuelRight Profile</h3>\n                                        <Form onSubmit={handleSubmit}>\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n                                                <Form.Label>Name</Form.Label>\n                                                <Form.Control required type=\"name\" placeholder=\"Enter name\" value={profileData.name} onChange={e => setProfileData({...profileData, name: e.target.value})}/>\n                                            </Form.Group>\n                                            \n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                                <Form.Label>Email</Form.Label>\n                                                <Form.Control required type=\"email\" placeholder=\"Enter email\" value={profileData.email} onChange={e => setProfileData({...profileData, email: e.target.value})} />\n                                            </Form.Group>\n                                            \n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicWeight\">\n                                                <Form.Label>Weight</Form.Label>\n                                                <Form.Control required type=\"text\" placeholder=\"Weight in lbs.\" value={profileData.weight} onChange={e => setProfileData({...profileData, weight: e.target.value})}/>\n                                            </Form.Group>\n                                            <div style={{display: 'inline-flex', flexDirection: 'row', width: '50%'}}>\n                                                <Button variant=\"primary\" type=\"submit\" style={{marginRight: '10px'}}>\n                                                    Save Changes\n                                                </Button>\n                                                <Button variant=\"danger\" type=\"button\" onClick={handleShow}>\n                                                    Delete Account\n                                                </Button>\n                                                <Modal \n                                                    show={show}\n                                                    onHide={handleClose}\n                                                    backdrop=\"static\"\n                                                    keyboard={false}\n                                                    centered\n                                                >\n                                                    <Modal.Header>\n                                                        <Modal.Title>You're about to delete your FuelRight profile...</Modal.Title>\n                                                    </Modal.Header>\n                                                    <Modal.Body>All of your data will be lost - schedules, activities, foods, etc. Are you sure you want to delete?</Modal.Body>\n                                                    <Modal.Footer>\n                                                        <Button variant=\"secondary\" onClick={handleClose}>\n                                                            No, take me back!\n                                                        </Button>\n                                                        <Button variant=\"danger\" onClick={handleDeleteConfirmation}>\n                                                            Yes, delete my profile :(\n                                                        </Button>\n                                                    </Modal.Footer>\n                                                </Modal> \n                                            </div>\n                                            <br></br>\n                                            {errors !== [] ? \n                                            (<div>\n                                                {errors.map((error, index)=> (<p style={{color: 'red', marginBottom: '0px', marginTop: '10px'}} key={index}>{error}</p>))}\n                                            </div>)\n                                            : null}\n                                        </Form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n            </section>\n        </div>\n    )\n}\n\nexport default EditProfileForm","import React from 'react';\nimport '../App.css';\nimport NavBar from './NavBar'\nimport Login from './Login'\nimport TrackerForm from './TrackerForm'\nimport DailyLog from './DailyLog'\nimport History from './History'\nimport EditProfileForm from './EditProfileForm'\nimport { Switch, Route } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [user, setUser] = useState(null)\n  const [schedules, setSchedules] = useState([])\n  const [displayForm, setDisplayForm] = useState(true)\n  // const [scheduleCheck, setScheduleCheck] = useState(true)\n  const [index, setIndex] = useState(0)\n  const [displayedSchedule, setDisplayedSchedule] = useState(null)\n  const [favFood, setFavFood] = useState(null)\n  const [errors, setErrors] = useState([])\n  const [avgSleepDuration, setAverageSleepDuration] = useState(null)\n  const [bestPerformanceFood, setBestPerformanceFood] = useState(null)\n  const [optimalSleepDuration, setOptimalSleepDuration] = useState(null)\n  const [chartOneData, setChartOneData] = useState(null)\n  const [chartTwoData, setChartTwoData] = useState(null)\n  \n  const history = useHistory()\n\n  useEffect(() => {\n    fetch(\"/me\").then((response) => {\n      if (response.ok) {\n        response.json().then((user) => {\n          setUser(user)\n          getSchedules()\n        });\n      }\n    });\n  }, []);\n\n  function onLogin(data) {\n    setUser(data)\n    getSchedules()\n  }\n\n  function getSchedules() {\n    fetch('/schedules')\n    .then(res => res.json())\n    .then(data => {\n      if (data.length !== 0) {\n        setSchedules(data)\n        setIndex(data.length - 1)\n        setDisplayedSchedule(null)\n        setFavFood(null)\n        setAverageSleepDuration(null)\n        setBestPerformanceFood(null)\n        setOptimalSleepDuration(null)\n        setChartOneData(null)\n        setChartTwoData(null)\n        getSingleSchedule(data[data.length - 1].id)\n        console.log(data)\n      } else {\n        setSchedules([])\n        setIndex(0)\n        setDisplayedSchedule(null)\n        setFavFood(null)\n        setAverageSleepDuration(null)\n        setBestPerformanceFood(null)\n        setOptimalSleepDuration(null)\n        setChartOneData(null)\n        setChartTwoData(null)\n      }\n    })\n  }\n\n  function getSingleSchedule(id) {\n    fetch(`schedules/${id}`)\n    .then(res => res.json())\n    .then(data => {\n      setDisplayedSchedule(data)\n      getFavFood()\n    })\n  }\n\n  function getFavFood() {\n    fetch('/favorite_food')\n    .then(res => res.json())\n    .then(data => {\n      if (data.error) {\n        getSleepDurations()\n      } else {\n        setFavFood(data)\n        getSleepDurations()\n      }\n    })\n  }\n\n  function getSleepDurations() {\n    fetch('/sleep_durations')\n    .then(res => res.json())\n    .then(data => {\n      console.log(data)\n      if (data.error) {\n        getBestPerformanceFood()\n      } else {\n        setAverageSleepDuration(data)\n        getBestPerformanceFood()\n      }\n    })\n  }\n\n  function getBestPerformanceFood() {\n    fetch('/performance_food')\n    .then(res => res.json())\n    .then(data => {\n      if (data.error) {\n        getOptimalSleepDuration()\n      } else {\n        setBestPerformanceFood(data)\n        getOptimalSleepDuration()\n      }\n    })\n  }\n\n  function getOptimalSleepDuration() {\n    fetch('/optimal_sleep_duration')\n    .then(res => res.json())\n    .then(data => {\n      if (data.error) {\n        getChartOneData()\n      } else {\n        setOptimalSleepDuration(data)\n        getChartOneData()\n      }\n    })\n  }\n\n  function getChartOneData() {\n    fetch('/chart_one_data')\n    .then(res => res.json())\n    .then(data => {\n      if (data.error) {\n        getChartTwoData()\n      } else {\n        setChartOneData(data)\n        getChartTwoData()\n      }\n    })\n  }\n\n  function getChartTwoData() {\n    fetch('/chart_two_data')\n    .then(res => res.json())\n    .then(data => {\n      if (data.error) {\n        setChartTwoData(null)\n      } else {\n        setChartTwoData(data)\n      }\n    })\n  }\n\n  function handleSchedulesScroll(id) {\n    fetch(`schedules/${id}`)\n    .then(res => res.json())\n    .then(data => {\n      setDisplayedSchedule(data)\n    })\n  }\n\n  async function logOut() {\n    const res = await fetch(\"/logout\", {\n      method: \"DELETE\"\n    })\n    if (res.ok) {\n      setUser(null)\n      setSchedules([])\n      setDisplayForm(true)\n      setIndex(0)\n      setDisplayedSchedule(null)\n      setFavFood(null)\n      setErrors([])\n      setAverageSleepDuration(null)\n      setBestPerformanceFood(null)\n      setOptimalSleepDuration(null)\n      setChartOneData(null)\n      setChartTwoData(null)\n      history.push(\"/login\")\n    }\n  }\n\n  async function handleUserUpdate(updatedUser) {\n    const res = await fetch(`/users/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\"Content-type\": \"application/json\"},\n      body: JSON.stringify(updatedUser)\n    })\n    const data = await res.json()\n    if (res.ok) {\n      setUser(data)\n      setErrors([])\n      history.push(\"/\")\n    } else {\n      setErrors(data.errors)\n    }\n  }\n\n  function handleUserDelete() {\n    fetch(`/users/${user.id}`, {\n      method: \"DELETE\",\n    })\n    .then(() => logOut())\n  }\n\n  async function addEntry(action, payload) {\n    if (action === 'activity') {\n      action = 'activitie'\n    }\n    const res = await fetch(`/${action}s`, {\n      method: \"POST\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify(payload)\n    })\n    const data = await res.json()\n    console.log(data)\n    if (res.ok) {\n      setDisplayForm(false)\n      setErrors([])\n      getSchedules()\n    } else {\n      setErrors(data.errors)\n    }\n  }\n\n  function handleScheduleDelete(id) {\n    fetch(`/schedules/${id}`, {\n      method: \"DELETE\"\n    })\n    .then(() => getSchedules())\n  }\n\n  console.log(user)\n  console.log(avgSleepDuration)\n\n  return (\n    <div className=\"App\">\n      {user ? <NavBar user={user} logout={logOut} setDisplayForm={setDisplayForm} setErrors={setErrors} /> : null}\n      <Switch>\n        <Route exact path=\"/\">\n          {user ? <TrackerForm addEntry={addEntry} displayForm={displayForm} setDisplayForm={setDisplayForm} errors={errors} /> : <Login onLogin={onLogin} setDisplayForm={setDisplayForm} />}\n        </Route>\n        <Route exact path=\"/day\">\n          {user ? <DailyLog schedules={schedules} index={index} setIndex={setIndex} handleSchedulesScroll={handleSchedulesScroll} displayedSchedule={displayedSchedule} handleScheduleDelete={handleScheduleDelete} /> : <Login onLogin={onLogin} setDisplayForm={setDisplayForm} />}\n        </Route>\n        <Route exact path=\"/history\">\n          {user ? <History user={user} schedules={schedules} favFood={favFood} avgSleepDuration={avgSleepDuration} bestPerformanceFood={bestPerformanceFood} optimalSleepDuration={optimalSleepDuration} chartOneData={chartOneData} chartTwoData={chartTwoData} /> : <Login onLogin={onLogin} setDisplayForm={setDisplayForm} />}\n        </Route>\n        <Route exact path=\"/edit\">\n          {user ? <EditProfileForm user={user} handleUserUpdate={handleUserUpdate} handleUserDelete={handleUserDelete} errors={errors}/> : <Login onLogin={onLogin} setDisplayForm={setDisplayForm} />}\n        </Route>\n        <Route exact path=\"/login\">\n          <Login onLogin={onLogin} setDisplayForm={setDisplayForm} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}